name: Avro-Cloudflared

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v2

      # Step 2: Download and Install Cloudflared
      - name: Download and Install Cloudflared
        run: |
          Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "$env:USERPROFILE\cloudflared.exe"
          Start-Sleep -Seconds 5

      # Step 3: Enable Remote Desktop and Firewall Rules
      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      # Step 4: Start Cloudflared Tunnel (No Token Needed)
      - name: Start Cloudflared Tunnel
        run: |
          Start-Process -FilePath "$env:USERPROFILE\cloudflared.exe" -ArgumentList "access tcp --hostname YOUR_DOMAIN_HERE --url RDP_SERVER_IP:3389" -NoNewWindow -Wait

      # Step 5: Keep the GitHub Action Runner Alive
      - name: Keep the GitHub Action Runner Alive
        run: |
          while ($true) {
            Write-Output "Session is alive - $(Get-Date)"
            Start-Sleep -Seconds 300
          }

      # Step 6: Trigger the workflow again
      - name: Trigger New Workflow Run
        if: always()
        env:
          REPO_PAT: ${{ secrets.REPO_PAT }}
        run: |
          $payload = @"
          {
            "ref": "main"
          }
          "@

          Invoke-RestMethod `
            -Method POST `
            -Uri "https://api.github.com/repos/${{ github.repository }}/actions/workflows/rdp.yml/dispatches" `
            -Headers @{
              Authorization = "token $env:REPO_PAT"
              Accept = "application/vnd.github.v3+json"
            } `
            -Body $payload
